on: [push]

name: Auto build

jobs:
  fmt:
    name: "Run rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Install toolchain"
        run: rustup toolchain install stable --profile minimal -c rustfmt
      - name: "Check formatting in root"
        run: cargo fmt --all --check

  clippy:
    name: "Run clippy for ${{ matrix.target }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - "stm32g071"
          - "stm32g0b1"
    steps:
      - uses: actions/checkout@v4
      - name: "Install toolchain"
        run: rustup toolchain install stable --profile minimal -c rustfmt,clippy -t thumbv6m-none-eabi
      - name: "Install libraries and gcc-arm"
        run: |
          sudo apt-get update
          sudo apt-get install libclang-dev llvm-dev gcc-arm-none-eabi
      - name: "Run clippy for debug build"
        run: cargo clippy --features ${{ matrix.target }} --no-deps -- -D warnings
      - name: "Run clippy for release build"
        run: cargo clippy --features ${{ matrix.target }} --release --no-deps -- -D warnings

  build:
    name: "Build for ${{ matrix.target }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - "stm32g071"
          - "stm32g0b1"
    steps:
      - uses: actions/checkout@v4
      - name: "Install toolchain"
        run: rustup toolchain install stable -t thumbv6m-none-eabi
      - name: "Install libraries and gcc-arm"
        run: |
          sudo apt-get update
          sudo apt-get install libclang-dev llvm-dev gcc-arm-none-eabi
      - name: "Debug build"
        run: cargo build --features ${{ matrix.target }}
      - name: "Release build"
        run: cargo build --features ${{ matrix.target }} --release
